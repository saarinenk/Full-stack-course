{"ast":null,"code":"var _jsxFileName = \"/Users/katrisaarinen/Others/Full-stack-course/part1/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Header = props => {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, props.course);\n};\n\nconst Content = props => {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.part, \" \", props.exercise);\n};\n\nconst Total = props => {};\n\nconst App = () => {\n  const course = \"Half Stack application development\";\n  const part1 = \"Fundamentals of React\";\n  const exercises1 = 10;\n  const part2 = \"Using props to pass data\";\n  const exercises2 = 7;\n  const part3 = \"State of a component\";\n  const exercises3 = 14;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Number of exercises \", exercises1 + exercises2 + exercises3));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/katrisaarinen/Others/Full-stack-course/part1/src/index.js"],"names":["React","ReactDOM","Header","props","course","Content","part","exercise","Total","App","part1","exercises1","part2","exercises2","part3","exercises3","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,MAAX,CAAP;AACD,CAFD;;AAGA,MAAMC,OAAO,GAAGF,KAAK,IAAI;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,IADT,OACgBH,KAAK,CAACI,QADtB,CADF;AAKD,CAND;;AAQA,MAAMC,KAAK,GAAGL,KAAK,IAAI,CAAE,CAAzB;;AAEA,MAAMM,GAAG,GAAG,MAAM;AAChB,QAAML,MAAM,GAAG,oCAAf;AACA,QAAMM,KAAK,GAAG,uBAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,KAAK,GAAG,0BAAd;AACA,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAMC,KAAK,GAAG,sBAAd;AACA,QAAMC,UAAU,GAAG,EAAnB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAwBJ,UAAU,GAAGE,UAAb,GAA0BE,UAAlD,CADF,CADF;AAKD,CAdD;;AAgBAd,QAAQ,CAACe,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Header = props => {\n  return <h1>{props.course}</h1>;\n};\nconst Content = props => {\n  return (\n    <p>\n      {props.part} {props.exercise}\n    </p>\n  );\n};\n\nconst Total = props => {};\n\nconst App = () => {\n  const course = \"Half Stack application development\";\n  const part1 = \"Fundamentals of React\";\n  const exercises1 = 10;\n  const part2 = \"Using props to pass data\";\n  const exercises2 = 7;\n  const part3 = \"State of a component\";\n  const exercises3 = 14;\n\n  return (\n    <div>\n      <p>Number of exercises {exercises1 + exercises2 + exercises3}</p>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}